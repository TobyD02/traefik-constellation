services:
  api-router-1:
    container_name: api-router-1
    image: traefik:latest
    command:
      - "--api.insecure=true"  # Expose dashboard
      - "--providers.docker=true"  # Enable Docker provider
      - "--providers.docker.exposedbydefault=false"  # Don't expose all services by default
      - "--entryPoints.web.address=:80"  # Define HTTP entrypoint
    labels:
      - "traefik.enable=true"
      
      # Router rule to match the /traefik/api path
      - "traefik.http.routers.api-router-1.rule=PathPrefix(`/traefik-1`)"
      - "traefik.http.routers.api-router-1.entrypoints=web"  # Use the web entrypoint
      - "traefik.http.services.api-router-1.loadbalancer.server.port=80"  # Route traffic to port 5000 inside the API container

      # Apply middleware to strip the /traefik prefix
      - "traefik.http.routers.api-router-1.middlewares=strip-traefik-prefix"  # Apply middleware to strip the prefix

      # Middleware definition for stripping the prefix
      - "traefik.http.middlewares.strip-traefik-prefix.stripprefix.prefixes=/traefik-1"  # Strip /traefik from URL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Traefik needs access to Docker socket
    networks:
      - proxy

  api:
    container_name: api
    image: api-image
    labels:
      - "traefik.enable=true"
      
      # Router rule to match the /traefik/api path
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"  # Use the web entrypoint
      - "traefik.http.services.api.loadbalancer.server.port=5000"  # Route traffic to port 5000 inside the API container

    networks:
      - proxy

networks:
  proxy:
    external: true
